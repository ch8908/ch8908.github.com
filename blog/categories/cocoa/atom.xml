<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Cocoa | Thousand Squared]]></title>
  <link href="http://ch8908.github.com/blog/categories/cocoa/atom.xml" rel="self"/>
  <link href="http://ch8908.github.com/"/>
  <updated>2013-04-20T16:35:53+08:00</updated>
  <id>http://ch8908.github.com/</id>
  <author>
    <name><![CDATA[黃千千]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[時間格式 PrettyFormatter]]></title>
    <link href="http://ch8908.github.com/blog/2013/03/16/shi-jian-ge-shi/"/>
    <updated>2013-03-16T13:22:00+08:00</updated>
    <id>http://ch8908.github.com/blog/2013/03/16/shi-jian-ge-shi</id>
    <content type="html"><![CDATA[<p><img class="center" src="https://raw.github.com/ch8908/Thousnad2/master/PrettyFormatter/exampleImage.png"></p>

<p>前陣子在剛好在處理時間格式，研究了Twitter與Facebook等各大網站的時間格式，發現每家都不太一樣各有特色呀。</p>

<p>因此決定實作做一個iOS上使用的Formatter，可以顯示 Twitter time format 或 Facebook time format。</p>

<!-- more -->


<h2>NSCalender與 NSDateComponents</h2>

<p>在Cocoa上有兩個很方便的Class：<strong>NSCalender</strong> 與 <strong>NSDateComponents</strong>，可以直接把時間轉換成幾天、幾年、幾個月、幾分鐘等等。 利用這兩個 Class 我們就可以做出最基本的幾分鐘前，幾秒鐘前啦。</p>

<p>宣告如下：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSCalendar</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">calendar</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSCalendar</span> <span class="n">currentCalendar</span><span class="p">];</span>
</span><span class='line'><span class="n">NSDateComponents</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span> <span class="n">components</span> <span class="o">=</span> <span class="p">[</span><span class="n">calendar</span> <span class="nl">components:</span><span class="n">NSYearCalendarUnit</span> <span class="o">|</span> <span class="n">NSMonthCalendarUnit</span> <span class="o">|</span> <span class="n">NSDayCalendarUnit</span> <span class="o">|</span>
</span><span class='line'><span class="n">NSHourCalendarUnit</span> <span class="o">|</span>  <span class="n">NSMinuteCalendarUnit</span> <span class="o">|</span>  <span class="n">NSSecondCalendarUnit</span>
</span><span class='line'><span class="nl">fromDate:</span><span class="n">date</span> <span class="nl">toDate:</span><span class="p">[</span><span class="n">NSDate</span> <span class="n">date</span><span class="p">]</span> <span class="nl">options:</span><span class="mi">0</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>其中可以指定 <strong>NSCalendar</strong> 的單位為何：如果只要年份就只填 <strong>NSYearCalendarUnit</strong>，如果需要多種就可以串起來啦。</p>

<p>使用時就可以直接找出 <strong>時間差</strong> 有多少啦，還可以指定到年月日分秒唷！</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">components</span><span class="p">.</span><span class="n">year</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="p">{...}</span>
</span><span class='line'><span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">components</span><span class="p">.</span><span class="n">second</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="p">{...}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>NSFormatter</h2>

<p>另外一個常用到的 <strong>NSDateFormatter</strong> 則可以用來指定要顯示的 “時間格式”。</p>

<p>新增一個 <strong>NSDateFormatter</strong></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSDateFormatter</span><span class="o">*</span> <span class="n">formatter</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSDateFormatter</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">formatter</span> <span class="nl">setDateFormat:</span><span class="s">@&quot;d MMM&quot;</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>其中 setDateFormat 可以參考：<br/>
<a href="http://unicode.org/reports/tr35/tr35-6.html#Date_Format_Patterns">Unicode Date Format Patterns</a></p>

<p>舉個例子：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSDateFormatter</span><span class="o">*</span> <span class="n">formatter</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">NSDateFormatter</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//7 Mar</span>
</span><span class='line'><span class="p">[</span><span class="n">formatter</span> <span class="nl">setDateFormat:</span><span class="s">@&quot;d MMM&quot;</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//07 March</span>
</span><span class='line'><span class="p">[</span><span class="n">formatter</span> <span class="nl">setDateFormat:</span><span class="s">@&quot;dd MMMM&quot;</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//March 7 at 12:30 PM</span>
</span><span class='line'><span class="p">[</span><span class="n">formatter</span> <span class="nl">setDateFormat:</span><span class="s">@&quot;MMMM d &#39;at&#39; h:mm a&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>小結</h2>

<p>我想有了這3個Class，任何時間格式就都不是問題啦！！！</p>

<p><a href="https://github.com/ch8908/Thousnad2/tree/master/PrettyFormatter" title="Optional Title">View source on Github</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Singletons in Cocoa/Objective-C]]></title>
    <link href="http://ch8908.github.com/blog/2012/11/04/singletons-in-cocoa/"/>
    <updated>2012-11-04T19:28:00+08:00</updated>
    <id>http://ch8908.github.com/blog/2012/11/04/singletons-in-cocoa</id>
    <content type="html"><![CDATA[<h2>什麼是Singleton?</h2>

<p>在程式設計中，singleton是常常被使用的design pattern。<br/>
依照官方文件來解釋，它的意思是說：</p>

<blockquote><p>A singleton class returns the same instance no matter how many times an application requests it.</p></blockquote>

<!-- more -->


<p>如果你建立了一個singleton class，當你在呼叫此class的instance時，它永遠會回傳相同的instance。這樣的好處在於，你不會建立無用的instance，不浪費記憶體，也不會產生錯誤的資料，在application中永遠都使用同一筆資料。</p>

<h2>建立Singleton</h2>

<p>依照官方的建議<a href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CocoaFundamentals/CocoaObjects/CocoaObjects.html#//apple_ref/doc/uid/TP40002974-CH4-SW32" title="Optional Title">Creating a Singleton Instance</a><br/>
嚴格定義一個singleton class，你必須要斷絕使用者任何可能產生錯誤的步驟。</p>

<h3>方法1:</h3>

<p>我們建立一個SingletonClass，實作它的.h與.m檔。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SingletonClass.h  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">SingletonClass</span> : <span class="nc">NSObject</span>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">SingletonClass</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedInstance</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SingletonClass.m  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@implementation</span> <span class="nc">SingletonClass</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sharedInstance</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">static</span> <span class="n">SingletonClass</span> <span class="o">*</span><span class="n">sharedMyInstance</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">sharedMyInstance</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">sharedMyInstance</span> <span class="o">=</span> <span class="p">[[</span><span class="n">super</span> <span class="nl">allocWithZone:</span><span class="nb">nil</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">return</span> <span class="n">sharedMyInstance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nl">allocWithZone:</span><span class="p">(</span><span class="n">NSZone</span> <span class="o">*</span><span class="p">)</span><span class="n">zone</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="n">sharedInstance</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>此方法主要利用<code>static</code>的概念實作：一個變數被宣告成static，此變數不會隨著method結束而被銷毀。更進一步的說，static變數只會被宣告一次，而且永遠不會被銷毀。而當你把一個static變數宣告在method裡時，只有此method才可以呼叫此static變數。</p>

<p>照上面的例子來看，只有<code>sharedInstance</code>這個method可以呼叫<code>sharedMyInstance</code>。此外當第二次遇到<code>static SingletonClass *sharedMyInstance = nil;</code>時，程式會發現，已經有sharedMyInstance了，所以就不做任何動作(因為static變數無法被銷毀)。</p>

<p>那為什麼要override <code>allocWithZone:</code>??<br/>
Program defensively!!! <br/>
因為要防止聰明的programmer，透過<code>allocWithZone:</code>產生新的instance。</p>

<p>當使用者呼叫<code>allocWithZone</code>時，程式會改呼叫<code>sharedInstance</code>，判斷是否已經產生sharedMyInstance。這樣就達到singleton的效果！</p>

<p>但是，此種寫法有個致命的缺點，它<strong><em>不是thread safe</em></strong>，也就是說，當你的instance同時被許多的thread呼叫時，有可能會爆炸...</p>

<p><strong>如果你一定要用singleton，就用dispatch_once()吧！</strong></p>

<h3>方法2:</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SingletonClass.m  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@implementation</span> <span class="nc">SingletonClass</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sharedInstance</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">static</span> <span class="n">SingletonClass</span> <span class="o">*</span><span class="n">sharedMyInstance</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">static</span> <span class="n">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>  <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">sharedMyInstance</span> <span class="o">=</span> <span class="p">[[</span><span class="n">super</span> <span class="nl">allocWithZone:</span><span class="nb">nil</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">return</span> <span class="n">sharedMyInstance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nl">allocWithZone:</span><span class="p">(</span><span class="n">NSZone</span> <span class="o">*</span><span class="p">)</span><span class="n">zone</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="n">sharedInstance</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>官方文件檔對dispatch_once的解釋：</p>

<blockquote><p>Executes a block object once and only once for the lifetime of an application.</p></blockquote>

<p>方法2是目前最簡單也最安全，也是常在WWDC影片中看到的方法。</p>

<h3>結論：</h3>

<p>如果真的要用singleton，那就使用第二種方法吧！</p>

<h2>參考資料：</h2>

<ol>
<li><a href="http://developer.apple.com/library/mac/#documentation/General/Conceptual/DevPedia-CocoaCore/Singleton.html" title="Optional Title">Singleton</a> - <em>Cocoa Core Competencies</em>.</li>
<li><a href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CocoaFundamentals/CocoaObjects/CocoaObjects.html#//apple_ref/doc/uid/TP40002974-CH4-SW32" title="Optional Title">Creating a Singleton Instance</a> - <em>Cocoa Fundamentals Guide</em>.</li>
<li><a href="http://eschatologist.net/blog/?p=178" title="Optional Title">Singletons in Cocoa/Objective-C</a></li>
<li><a href="http://cocoasamurai.blogspot.tw/2011/04/singletons-your-doing-them-wrong.html" title="Optional Title">Singletons: You're doing them wrong</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
