<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Objective-C | Thousand Squared]]></title>
  <link href="http://ch8908.github.com/blog/categories/objective-c/atom.xml" rel="self"/>
  <link href="http://ch8908.github.com/"/>
  <updated>2013-04-04T21:47:40+08:00</updated>
  <id>http://ch8908.github.com/</id>
  <author>
    <name><![CDATA[黃千千]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Singletons in Cocoa/Objective-C]]></title>
    <link href="http://ch8908.github.com/blog/2012/11/04/singletons-in-cocoa/"/>
    <updated>2012-11-04T19:28:00+08:00</updated>
    <id>http://ch8908.github.com/blog/2012/11/04/singletons-in-cocoa</id>
    <content type="html"><![CDATA[<h2>什麼是Singleton?</h2>

<p>在程式設計中，singleton是常常被使用的design pattern。<br/>
依照官方文件來解釋，它的意思是說：</p>

<blockquote><p>A singleton class returns the same instance no matter how many times an application requests it.</p></blockquote>

<!-- more -->


<p>如果你建立了一個singleton class，當你在呼叫此class的instance時，它永遠會回傳相同的instance。這樣的好處在於，你不會建立無用的instance，不浪費記憶體，也不會產生錯誤的資料，在application中永遠都使用同一筆資料。</p>

<h2>建立Singleton</h2>

<p>依照官方的建議<a href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CocoaFundamentals/CocoaObjects/CocoaObjects.html#//apple_ref/doc/uid/TP40002974-CH4-SW32" title="Optional Title">Creating a Singleton Instance</a><br/>
嚴格定義一個singleton class，你必須要斷絕使用者任何可能產生錯誤的步驟。</p>

<h3>方法1:</h3>

<p>我們建立一個SingletonClass，實作它的.h與.m檔。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SingletonClass.h  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">SingletonClass</span> : <span class="nc">NSObject</span>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">SingletonClass</span> <span class="o">*</span><span class="p">)</span><span class="nf">sharedInstance</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SingletonClass.m  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@implementation</span> <span class="nc">SingletonClass</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sharedInstance</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">static</span> <span class="n">SingletonClass</span> <span class="o">*</span><span class="n">sharedMyInstance</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">sharedMyInstance</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">sharedMyInstance</span> <span class="o">=</span> <span class="p">[[</span><span class="n">super</span> <span class="nl">allocWithZone:</span><span class="nb">nil</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">return</span> <span class="n">sharedMyInstance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nl">allocWithZone:</span><span class="p">(</span><span class="n">NSZone</span> <span class="o">*</span><span class="p">)</span><span class="n">zone</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="n">sharedInstance</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>此方法主要利用<code>static</code>的概念實作：一個變數被宣告成static，此變數不會隨著method結束而被銷毀。更進一步的說，static變數只會被宣告一次，而且永遠不會被銷毀。而當你把一個static變數宣告在method裡時，只有此method才可以呼叫此static變數。</p>

<p>照上面的例子來看，只有<code>sharedInstance</code>這個method可以呼叫<code>sharedMyInstance</code>。此外當第二次遇到<code>static SingletonClass *sharedMyInstance = nil;</code>時，程式會發現，已經有sharedMyInstance了，所以就不做任何動作(因為static變數無法被銷毀)。</p>

<p>那為什麼要override <code>allocWithZone:</code>??<br/>
Program defensively!!! <br/>
因為要防止聰明的programmer，透過<code>allocWithZone:</code>產生新的instance。</p>

<p>當使用者呼叫<code>allocWithZone</code>時，程式會改呼叫<code>sharedInstance</code>，判斷是否已經產生sharedMyInstance。這樣就達到singleton的效果！</p>

<p>但是，此種寫法有個致命的缺點，它<strong><em>不是thread safe</em></strong>，也就是說，當你的instance同時被許多的thread呼叫時，有可能會爆炸...</p>

<p><strong>如果你一定要用singleton，就用dispatch_once()吧！</strong></p>

<h3>方法2:</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>SingletonClass.m  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@implementation</span> <span class="nc">SingletonClass</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sharedInstance</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">static</span> <span class="n">SingletonClass</span> <span class="o">*</span><span class="n">sharedMyInstance</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">static</span> <span class="n">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>  <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">sharedMyInstance</span> <span class="o">=</span> <span class="p">[[</span><span class="n">super</span> <span class="nl">allocWithZone:</span><span class="nb">nil</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">return</span> <span class="n">sharedMyInstance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nl">allocWithZone:</span><span class="p">(</span><span class="n">NSZone</span> <span class="o">*</span><span class="p">)</span><span class="n">zone</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="n">sharedInstance</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>官方文件檔對dispatch_once的解釋：</p>

<blockquote><p>Executes a block object once and only once for the lifetime of an application.</p></blockquote>

<p>方法2是目前最簡單也最安全，也是常在WWDC影片中看到的方法。</p>

<h3>結論：</h3>

<p>如果真的要用singleton，那就使用第二種方法吧！</p>

<h2>參考資料：</h2>

<ol>
<li><a href="http://developer.apple.com/library/mac/#documentation/General/Conceptual/DevPedia-CocoaCore/Singleton.html" title="Optional Title">Singleton</a> - <em>Cocoa Core Competencies</em>.</li>
<li><a href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CocoaFundamentals/CocoaObjects/CocoaObjects.html#//apple_ref/doc/uid/TP40002974-CH4-SW32" title="Optional Title">Creating a Singleton Instance</a> - <em>Cocoa Fundamentals Guide</em>.</li>
<li><a href="http://eschatologist.net/blog/?p=178" title="Optional Title">Singletons in Cocoa/Objective-C</a></li>
<li><a href="http://cocoasamurai.blogspot.tw/2011/04/singletons-your-doing-them-wrong.html" title="Optional Title">Singletons: You're doing them wrong</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C Literals 介紹]]></title>
    <link href="http://ch8908.github.com/blog/2012/10/30/objective-c-literalsjie-shao/"/>
    <updated>2012-10-30T18:16:00+08:00</updated>
    <id>http://ch8908.github.com/blog/2012/10/30/objective-c-literalsjie-shao</id>
    <content type="html"><![CDATA[<p>Apple LLVM Compiler 4.0提供了新的object literal語法。
這篇文章會跟大家分享這新功能，讓在撰寫Objective-C時能夠有效率。
也讓Objective-C看起來更貼近開發人員啦！</p>

<!-- more -->


<p>在Objective-C中，最常被使用的object literal為</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">myString</span> <span class="o">=</span> <span class="s">@&quot;Thousand Squared&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在上述的例子中，@"Thousand Squared"為一個object literal，用來代表一個<strong>NSString</strong> object。如果不使用object literal的話，程式碼會長的很不一樣。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">myString</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithUTF8String:</span><span class="s">&quot;Thousand Squared&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>很明顯的可以知道，第一種寫法是比較好讀，也比較好寫的。</p>

<p>而新的Apple LLVM Compiler 4.0，增加了額外的object literal。
包含<strong>NSNumber</strong> object, <strong>NSArray</strong> object, <strong>NSDictionary</strong> object</p>

<h2>NSNumber Literals</h2>

<p>以<strong>NSNumber</strong>為例:</p>

<p>以下程式碼為傳統的Objective-C寫法：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">boolYES</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithBool:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">boolNO</span>  <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithBool:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">charX</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithChar:</span><span class="sc">&#39;X&#39;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">fortySevenInt</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithInt:</span><span class="mi">47</span><span class="p">];</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">fortySevenUnsigned</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithUnsignedInt:</span><span class="mi">47</span><span class="n">U</span><span class="p">];</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">fortySevenLong</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithLong:</span><span class="mi">47L</span><span class="p">];</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">goldenRatioFloat</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithFloat:</span><span class="mf">1.61803F</span><span class="p">];</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">goldenRatioDouble</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithDouble:</span><span class="mf">1.61803</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>現在，我們可以用object literals改寫成：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">boolYES</span> <span class="o">=</span> <span class="err">@</span><span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">boolNO</span>  <span class="o">=</span> <span class="err">@</span><span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">charX</span> <span class="o">=</span> <span class="sc">@&#39;X&#39;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">fortySevenInt</span> <span class="o">=</span> <span class="err">@</span><span class="mi">47</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">fortySevenUnsigned</span> <span class="o">=</span> <span class="err">@</span><span class="mi">47</span><span class="n">U</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">fortySevenLong</span> <span class="o">=</span> <span class="err">@</span><span class="mi">47L</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">goldenRatioFloat</span> <span class="o">=</span> <span class="err">@</span><span class="mf">1.61803F</span><span class="p">;</span>
</span><span class='line'><span class="n">NSNumber</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">goldenRatioDouble</span> <span class="o">=</span> <span class="err">@</span><span class="mf">1.61803</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>是不是簡單多了呢！</p>

<h2>Objective-C Collection Literals</h2>

<p>Collection literal對objective-c來說真是不可思意的好用呀！新的LLVM Compiler有提供Array與Dictionary的collection listral，要注意的是，沒有包含sets。</p>

<h3>NSArray Literals</h3>

<p>傳統的語法建立<strong>NSArray</strong>：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">instruments</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span> <span class="s">@&quot;Ocarina&quot;</span><span class="p">,</span> <span class="s">@&quot;Flute&quot;</span><span class="p">,</span> <span class="s">@&quot;Harp&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>利用新的object literal方法建立<strong>NSArray</strong>：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">instruments</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span> <span class="s">@&quot;Ocarina&quot;</span><span class="p">,</span> <span class="s">@&quot;Flute&quot;</span><span class="p">,</span> <span class="s">@&quot;Harp&quot;</span> <span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>很可惜的是，上述語法並不支援<strong>NSMutableArray</strong>，但是我們可以利用一些小撇步來建立<strong>NSMutableArray</strong>：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">instrumentsMutable</span> <span class="o">=</span> <span class="p">[</span> <span class="err">@</span><span class="p">[</span> <span class="s">@&quot;Ocarina&quot;</span><span class="p">,</span> <span class="s">@&quot;Flute&quot;</span><span class="p">,</span> <span class="s">@&quot;Harp&quot;</span> <span class="p">]</span> <span class="n">mutableCopy</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Dictionary Literals</h3>

<p>傳統語法建立<strong>NSDictionary</strong> object：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSArray</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">keys</span>   <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span><span class="s">@&quot;Character&quot;</span><span class="p">,</span> <span class="s">@&quot;Weapon&quot;</span><span class="p">,</span> <span class="s">@&quot;Hitpoints&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span><span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="n">NSArray</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">objects</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span><span class="s">@&quot;Zelda&quot;</span><span class="p">,</span> <span class="s">@&quot;Sword&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithInt:</span><span class="mi">50</span><span class="p">],</span> <span class="nb">nil</span><span class="p">];</span><span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">stats</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObjects:</span><span class="n">objects</span> <span class="nl">forKeys:</span><span class="n">keys</span><span class="p">];</span><span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>或者，可以更簡單一點：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">stats</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObjectsAndKeys:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                  <span class="s">@&quot;Zelda&quot;</span><span class="p">,</span> <span class="s">@&quot;Character&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s">@&quot;Sword&quot;</span><span class="p">,</span> <span class="s">@&quot;Weapon&quot;</span><span class="p">,</span>
</span><span class='line'>                  <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithInt:</span><span class="mi">50</span><span class="p">],</span> <span class="s">@&quot;Hitpoints&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>有了新的object literal之後，一切變得更簡單：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">stats</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span> <span class="s">@&quot;Character&quot;</span> <span class="o">:</span> <span class="s">@&quot;Zelda&quot;</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                     <span class="s">@&quot;Weapon&quot;</span> <span class="o">:</span> <span class="s">@&quot;Sword&quot;</span><span class="p">,</span>
</span><span class='line'>                     <span class="s">@&quot;Hitpoints&quot;</span> <span class="o">:</span> <span class="err">@</span><span class="mi">50</span><span class="p">};</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Collection Subscripting</h2>

<p>除了利用object literal建立collection object之外，新的LLVM Compiler也提供存取collection object的方法─利用subscripts。</p>

<p>傳統的語法如下：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSString</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">instrument</span> <span class="o">=</span> <span class="p">[</span><span class="n">instruments</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">name</span> <span class="o">=</span> <span class="p">[</span><span class="n">stats</span> <span class="nl">objectForKey:</span><span class="s">@&quot;Character&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>現在，利用新的subscripts存取collection：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSString</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">instrument</span> <span class="o">=</span> <span class="n">instruments</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">name</span> <span class="o">=</span> <span class="n">stats</span><span class="p">[</span><span class="s">@&quot;Character&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>除此之外，subscripting不只只有取出資料而已，如果你的collection為mutable的型態，你也可以用它來改變元素內容。
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">instrumentsMutable</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s">@&quot;Ocarina of Time&quot;</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">NSMutableDictionary</span> <span class="o">*</span><span class="n">statsMutable</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSMutableDictionary</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithDictionary:</span><span class="n">stats</span><span class="p">];</span>
</span><span class='line'><span class="n">statsMutable</span><span class="p">[</span><span class="s">@&quot;Weapon&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">@&quot;Hammer&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>這個改變讓objective-c變得更平易近人，操作上也更直觀。</p>

<h3>結論</h3>

<p>這些語法是完全<strong>向下相容</strong>的，經過compile後轉成2進位的編碼，是可以在舊的iOS環境執行的。<br/>
因此，別再留念舊方法啦!!!</p>

<h2>參考資料：</h2>

<ol>
<li><a href="http://mobile.tutsplus.com/tutorials/iphone/objective-c-literals/" title="Optional Title">Objective-C Literals</a> - <em>Mobile tuts+</em>.</li>
<li><a href="http://weblog.bignerdranch.com/398-objective-c-literals-part-1/" title="Optional Title">Objective-C Literals, Part 1</a> - <em>Big Nerd Ranch Weblog</em>.</li>
<li><a href="http://clang.llvm.org/docs/ObjectiveCLiterals.html" title="Optional Title">Objective-C Literals official documentation</a> - <em>LLVM Home</em>.</li>
</ol>

]]></content>
  </entry>
  
</feed>
